// Code generated by "stringer -type Relation"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Only-1]
	_ = x[Any-2]
	_ = x[All-4]
	_ = x[Superset-8]
	_ = x[NotSuperset-16]
	_ = x[Subset-32]
	_ = x[NotSubset-64]
	_ = x[Succeeds-128]
	_ = x[Preceeds-256]
	_ = x[Unrelated-0]
}

const (
	_Relation_name_0 = "UnrelatedOnlyAny"
	_Relation_name_1 = "All"
	_Relation_name_2 = "Superset"
	_Relation_name_3 = "NotSuperset"
	_Relation_name_4 = "Subset"
	_Relation_name_5 = "NotSubset"
	_Relation_name_6 = "Succeeds"
	_Relation_name_7 = "Preceeds"
)

var (
	_Relation_index_0 = [...]uint8{0, 9, 13, 16}
)

func (i Relation) String() string {
	switch {
	case i <= 2:
		return _Relation_name_0[_Relation_index_0[i]:_Relation_index_0[i+1]]
	case i == 4:
		return _Relation_name_1
	case i == 8:
		return _Relation_name_2
	case i == 16:
		return _Relation_name_3
	case i == 32:
		return _Relation_name_4
	case i == 64:
		return _Relation_name_5
	case i == 128:
		return _Relation_name_6
	case i == 256:
		return _Relation_name_7
	default:
		return "Relation(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
