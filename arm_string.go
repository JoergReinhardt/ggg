// Code generated by "stringer -type Arm"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Substract - -1]
	_ = x[Add-0]
	_ = x[Multiply-1]
	_ = x[Divide-2]
	_ = x[Power-3]
	_ = x[Sum-4]
	_ = x[Product-5]
	_ = x[Coproduct-6]
	_ = x[Root-7]
	_ = x[NaryAdd-8]
	_ = x[NaryDotMultiply-9]
	_ = x[NaryXMultiply-10]
}

const _Arm_name = "SubstractAddMultiplyDividePowerSumProductCoproductRootNaryAddNaryDotMultiplyNaryXMultiply"

var _Arm_index = [...]uint8{0, 9, 12, 20, 26, 31, 34, 41, 50, 54, 61, 76, 89}

func (i Arm) String() string {
	i -= -1
	if i < 0 || i >= Arm(len(_Arm_index)-1) {
		return "Arm(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _Arm_name[_Arm_index[i]:_Arm_index[i+1]]
}
