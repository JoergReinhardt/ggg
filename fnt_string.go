// Code generated by "stringer -type FnT"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Expression-1]
	_ = x[Constraint-2]
	_ = x[Parameter-4]
	_ = x[Argument-8]
	_ = x[Partial-16]
	_ = x[Lambda-32]
	_ = x[Fixity-64]
	_ = x[Result-128]
	_ = x[Assign-256]
	_ = x[Scope-512]
	_ = x[Apply-1024]
	_ = x[Curry-2048]
	_ = x[Call-4096]
	_ = x[Dot-8192]
	_ = x[Nop-0]
}

const _FnT_name = "NopExpressionConstraintParameterArgumentPartialLambdaFixityResultAssignScopeApplyCurryCallDot"

var _FnT_map = map[FnT]string{
	0:    _FnT_name[0:3],
	1:    _FnT_name[3:13],
	2:    _FnT_name[13:23],
	4:    _FnT_name[23:32],
	8:    _FnT_name[32:40],
	16:   _FnT_name[40:47],
	32:   _FnT_name[47:53],
	64:   _FnT_name[53:59],
	128:  _FnT_name[59:65],
	256:  _FnT_name[65:71],
	512:  _FnT_name[71:76],
	1024: _FnT_name[76:81],
	2048: _FnT_name[81:86],
	4096: _FnT_name[86:90],
	8192: _FnT_name[90:93],
}

func (i FnT) String() string {
	if str, ok := _FnT_map[i]; ok {
		return str
	}
	return "FnT(" + strconv.FormatInt(int64(i), 10) + ")"
}
