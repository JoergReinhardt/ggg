// Code generated by "stringer -type Dat"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Boolean-1]
	_ = x[Unsigned-2]
	_ = x[Integer-4]
	_ = x[Rational-8]
	_ = x[Irrational-16]
	_ = x[Imaginary-32]
	_ = x[Binary-64]
	_ = x[Character-128]
	_ = x[String-256]
	_ = x[Slice-512]
	_ = x[Struct-1024]
	_ = x[KeyVal-2048]
	_ = x[Native-4096]
	_ = x[Literal-8192]
	_ = x[None-0]
}

const _Dat_name = "NoneBooleanUnsignedIntegerRationalIrrationalImaginaryBinaryCharacterStringSliceStructKeyValNativeLiteral"

var _Dat_map = map[Dat]string{
	0:    _Dat_name[0:4],
	1:    _Dat_name[4:11],
	2:    _Dat_name[11:19],
	4:    _Dat_name[19:26],
	8:    _Dat_name[26:34],
	16:   _Dat_name[34:44],
	32:   _Dat_name[44:53],
	64:   _Dat_name[53:59],
	128:  _Dat_name[59:68],
	256:  _Dat_name[68:74],
	512:  _Dat_name[74:79],
	1024: _Dat_name[79:85],
	2048: _Dat_name[85:91],
	4096: _Dat_name[91:97],
	8192: _Dat_name[97:104],
}

func (i Dat) String() string {
	if str, ok := _Dat_map[i]; ok {
		return str
	}
	return "Dat(" + strconv.FormatInt(int64(i), 10) + ")"
}
